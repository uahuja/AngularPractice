signup.comp.ts

import { UsernameValidators } from './username.validators';
import { Component, OnInit } from '@angular/core';
import { FormGroup, FormControl, Validators } from '@angular/forms'
@Component({
  selector: 'signup-form',
  templateUrl: './signup-form.component.html',
  styleUrls: ['./signup-form.component.css']
})
export class SignupFormComponent  {

  form = new FormGroup({

   // "user-name" : new FormControl(),           Key Should be in quotes if you want to use special characters. Normal is ok by JS 
    username : new FormControl('', 
                                    Validators.required, 
                                    UsernameValidators.shouldBeUnique),     
    password : new FormControl('',Validators.required)
  });


  login(){
   
      this.form.setErrors({
        invalidLogin : true
      })
      
    }
  
  get username(){
    return this.form.get('username');
  }
}

********************************************************

signup.comp.html (Staring two Lines)


<form [formGroup]="form" (ngSubmit)="login()" >             <!-- login is in comp.ts -->   
  <div class="alert alert-danger" *ngIf="form.errors"> Username or Password is not Valid</div>                 
  <div class="form-group">
    <label for="username">Username</label>
    <input 

        formControlName="username"
        id="username" 
        type="text" 
        class="form-control">
    </div>
    <div class="alert alert-danger" *ngIf="username.pending">checking for Uniqueness.........</div>


    <!-- <div *ngIf= " form.get('username').touched && form.get('username').invalid " class="alert alert-danger">Username is Required</div> -->
    <div *ngIf= "username.touched && username.invalid " class="alert alert-danger">
      <div *ngIf="username.errors.required"> Username is Required</div>
      <div *ngIf="username.errors.minlength"> Username should be of length {{ username.errors.minlength.requiredLength}}</div>
      
      <div *ngIf="username.errors.shouldBeUnique">Username already taken.</div>
    </div>

  <div class="form-group">
      <label for="password">Password</label>
      <input 
        formControlName="password"
        id="password" 
        type="password" 
        class="form-control">
    </div>

    <button class="btn btn-primary" type="submit " >Submit</button>
  </form>